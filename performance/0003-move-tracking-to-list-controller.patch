From 5b3bffedd28c616c70ae5764ebef5b72cb35827b Mon Sep 17 00:00:00 2001
From: Piioo <Piotr.Szal@googlemail.com>
Date: Wed, 18 Jun 2014 17:45:38 +0200
Subject: [PATCH] test patch

---
 app/controllers/application_controller.rb | 2 --
 app/controllers/list_controller.rb        | 5 +++++
 app/models/topic_tracking_state.rb        | 8 ++++----
 3 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 2da4274..0994957 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -238,8 +238,6 @@ class ApplicationController < ActionController::Base
 
     def preload_current_user_data
       store_preloaded("currentUser", MultiJson.dump(CurrentUserSerializer.new(current_user, scope: guardian, root: false)))
-      serializer = ActiveModel::ArraySerializer.new(TopicTrackingState.report([current_user.id]), each_serializer: TopicTrackingStateSerializer)
-      store_preloaded("topicTrackingStates", MultiJson.dump(serializer))
     end
 
     def custom_html_json
diff --git a/app/controllers/list_controller.rb b/app/controllers/list_controller.rb
index 22e07bd..289a773 100644
--- a/app/controllers/list_controller.rb
+++ b/app/controllers/list_controller.rb
@@ -206,6 +206,11 @@ class ListController < ApplicationController
     respond_to do |format|
       format.html do
         @list = list
+        if current_user
+          serializer = ActiveModel::ArraySerializer.new(TopicTrackingState.report([current_user.id], list.topics.map(&:id)), each_serializer: TopicTrackingStateSerializer)
+          store_preloaded("topicTrackingStates", MultiJson.dump(serializer))
+        end
+
         store_preloaded('topic_list', MultiJson.dump(TopicListSerializer.new(list, scope: guardian)))
         render 'list'
       end
diff --git a/app/models/topic_tracking_state.rb b/app/models/topic_tracking_state.rb
index 6f5cadf..3d6808b 100644
--- a/app/models/topic_tracking_state.rb
+++ b/app/models/topic_tracking_state.rb
@@ -97,7 +97,7 @@ class TopicTrackingState
               ).where_values[0]
   end
 
-  def self.report(user_ids, topic_id = nil)
+  def self.report(user_ids, topic_ids = nil)
 
     # Sam: this is a hairy report, in particular I need custom joins and fancy conditions
     #  Dropping to sql_builder so I can make sense of it.
@@ -143,13 +143,13 @@ class TopicTrackingState
 
 SQL
 
-    if topic_id
-      sql << " AND topics.id = :topic_id"
+    if topic_ids
+      sql << " AND topics.id IN (:topic_ids)"
     end
     sql << " ORDER BY topics.bumped_at DESC LIMIT 500"
 
     SqlBuilder.new(sql)
-      .map_exec(TopicTrackingState, user_ids: user_ids, topic_id: topic_id,
+      .map_exec(TopicTrackingState, user_ids: user_ids, topic_ids: topic_ids,
                 public_archetypes: Archetype.capable(:shown_publicly))
 
   end
-- 
1.8.5.2 (Apple Git-48)

